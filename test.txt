$RootCred=New-VICredentialStoreItem -Host incloud.vodafone.ua -User sasha@kvcloud.local -Password 'Seag16'

Connect-CIServer -Server $RootCred.Host -User $RootCred.User -Password $RootCred.Password
Connect-CIServer -Server incloud.vodafone.ua -User sasha@kvcloud.local -Password 'Seag16'

Tenant TestSasha
alex
P@ssword


New-VICredentialStoreItem -Host incloud.vodafone.ua -User sasha@kvcloud.local -Password 'Seag16'

Host                 User                 File
----                 ----                 ----
incloud.vodafone.ua  sasha@kvcloud.local

$creds =  Get-VICredentialStoreItem -Host "incloud.vodafone.ua"
Connect-CIServer -Server $creds.Host -User $creds.User -Password $creds.Password

$myNet=Get-CIVAppNetwork -Name TSNetwork
Set-CINetworkAdapter -NetworkAdapter $myadapter -Connected $True -IPAddress 192.168.99.3 -IPAddressAllocationMode Manual -VAppNetwork $myNet[1]

setfont UniCyr_8x16 >> /root/.bash_profile
#(ну и всем пользователям, кому это нужно)


ACCESS_TO_RESOURCE_IS_FORBIDDEN: [ 86f01a8e-f434-4bf3-9564-dca7362f8eba ] 

sudo dnf install open-vm-tools

sudo dnf install open-vm-tools open-vm-tools-desktop


Write-Host "New Local User "$name "in " $Org " as "$Role "will be created"
        $OrgED 			= (Get-Org $Org).ExtensionData 
        $orgAdminUser 		= New-Object VMware.VimAutomation.Cloud.Views.User 
        $orgAdminUser.Name 	= $Name 
        $orgAdminUser.IsEnabled	= $Enabled
        #$orgAdminUser.IsExternal = "True"
        #Added from another file
        $orgAdminUser.IsExternal = $false
        $orgAdminUser.FullName 	= $FullName
        $orgAdminUser.Password 	= $Password
        #$vcloud = $DefaultCIServers[0].ExtensionData 
        #$orgAdminRole 		= $vcloud.RoleReferences.RoleReference | where {$_.Name -eq $Role} 
        $orgAdminRole 		= (Get-Org $org).ExtensionData.RoleReferences.RoleReference | where {$PSItem.Name -eq $role}
        #Write-Host -ForegroundColor Yellow orgAdminRole=$orgAdminRole
        $orgAdminUser.Role 	= $orgAdminRole 
        $user 			= $orgED.CreateUser($orgAdminUser) 
        Get-CIUser -Org $Org -Name $Name -Role $role 

New-OrgVdc -Name "NewOrg1 oVDC" -Org "NewOrg1" -ProviderVdc "pVDC01"  -AllocationModelAllocationPool  -CpuAllocationGHz 5 -Description "NewOrg1 oVDC Description" -MemoryAllocationGB 32 -NetworkPool ((Get-NetworkPool).name) -StorageAllocationGB 100

New-OrgVdc 	-Name "NewOrg1 oVDC" `
		-Org "NewOrg1" `
		-ProviderVdc "pVDC01" `
  		-AllocationModelAllocationPool `
  		-CpuAllocationGHz 5 `
		-Description "NewOrg1 oVDC Description" `
		-MemoryAllocationGB 32 `
		-NetworkPool ((Get-NetworkPool).name) `
 		-StorageAllocationGB 100 `
  		-server incloud.vodafone.ua
Из файла
Function New-OrgVDC {
    Param (
        $Name,
        [Switch]$Enabled,
        $Org,
        $ProviderVDC,
        $AllocationModel,
        $CPULimit,
        $CPUAllocated,
        $MEMAllocated,
        $MEMLimit,
        $StoraqeLimit
    )
    Process {
        $adminVdc = New-Object VMware.VimAutomation.Cloud.Views.AdminVdc
        $adminVdc.Name = $name
        $adminVdc.IsEnabled = $Enabled
        $providerVdc = Get-ProviderVdc $ProviderVDC
        $providerVdcRef = New-Object VMware.VimAutomation.Cloud.Views.Reference
        $providerVdcRef.Href = $providerVdc.Href
        $adminVdc.ProviderVdcReference =$providerVdcRef
        $adminVdc.AllocationModel = $AllocationModel
        $adminVdc.ComputeCapacity = New-Object VMware.VimAutomation.Cloud.Views.ComputeCapacity
        $adminVdc.ComputeCapacity.Cpu = New-Object VMware.VimAutomation.Cloud.Views.CapacityWithUsage
        $adminVdc.ComputeCapacity.Cpu.Units = "MHz"
        $adminVdc.ComputeCapacity.Cpu.Limit = $CPULimit
        $adminVdc.ComputeCapacity.Cpu.Allocated = $CPUAllocated
        $adminVdc.ComputeCapacity.Memory = New-Object VMware.VimAutomation.Cloud.Views.CapacityWithUsage
        $adminVdc.ComputeCapacity.Memory.Units = "MB"
        $adminVdc.ComputeCapacity.Memory.Limit = $MEMLimit
        $adminVdc.ComputeCapacity.Memory.Allocated = $MEMAllocated
        $adminVdc.StorageCapacity = New-Object VMware.VimAutomation.Cloud.Views.CapacityWithUsage
        $adminVdc.StorageCapacity.Units = "MB"
        $adminVdc.StorageCapacity.Limit = $StorageLimit
       
        $OrgED = (Get-Org $Org).ExtensionData
        $orgVdc = $orgED.CreateVdc($adminVdc)
        Get-OrgVdc $name
    }
}
New-OrgVDC -Name "NewOrg1 oVDC" -Org "NewOrg1" -AllocationModel "AllocationPool" -Enabled -CPUAllocated 5000 -CPULimit 1000 -MEMAllocated 32000 -MEMLimit 2000 -ProviderVDC "pVDC01" -StorageLimit 1024
